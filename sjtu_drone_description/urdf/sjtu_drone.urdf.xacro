<?xml version="1.0" ?>
<robot name="sjtu_drone"
  xmlns:xacro="http://ros.org/wiki/xacro">

  <link name="base_link">
    <inertial>
      <mass value="1.477"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.1152" ixy="0" ixz="0" iyy="0.1152" iyz="0" izz="0.218"/>
    </inertial>
    <collision name="sjtu_drone_collision">
      <origin rpy="0 0 0" xyz="0   0   0.04"/>
      <geometry>
        <mesh filename="file://$(find sjtu_drone_description)/models/sjtu_drone/quadrotor_4.stl"/>
        <!-- <mesh filename="package://sjtu_drone/quadrotor_4.stl"/> -->
      </geometry>
    </collision>
    <visual name="sjtu_drone_visual">
      <origin rpy="0 0 0" xyz="0   0   0.04"/>
      <geometry>
        <mesh filename="file://$(find sjtu_drone_description)/models/sjtu_drone/quadrotor_4.dae"/>
        <!-- <mesh filename="package://sjtu_drone/quadrotor_4.dae"/> -->
      </geometry>
    </visual>
  </link>

  <link name="sonar_link"/>
  
  <joint name="sonar_joint" type="fixed">
    <parent link="base_link" />
    <child link="sonar_link" />
    <origin rpy="0 1.570796326794897 0" xyz="0 0 0"/>
  </joint>


  <link name="front_cam_link"/>

  <joint name="front_cam_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <parent link="base_link" />
    <child link="front_cam_link" />
  </joint>


  <link name="camera_link_optical"/>


  
  <joint name="camera_optical_joint" type="fixed">
      <!-- these values have to be these values otherwise the gazebo camera
          image won't be aligned properly with the frame it is supposedly
          originating from -->
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
      <parent link="front_cam_link"/>
      <child link="camera_link_optical"/>
  </joint>

  <joint name="bottom_cam_joint" type="fixed">
    <origin rpy="0 1.570796326794897 0" xyz="0 0 0"/>
    <parent link="base_link" />
    <child link="bottom_cam_link" />
  </joint>
  <link name="bottom_cam_link"/>




  <gazebo>
    <plugin name='simple_drone' filename='libplugin_drone.so'>
      <bodyName>base_link</bodyName>
      <rosNamespace>drone</rosNamespace>
      <imuTopic>imu</imuTopic>
      <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
      <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
      <rollpitchLimit>0.5</rollpitchLimit>
      <yawProportionalGain>2.0</yawProportionalGain>
      <yawDifferentialGain>1.0</yawDifferentialGain>
      <yawLimit>1.5</yawLimit>
      <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
      <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
      <velocityXYLimit>2</velocityXYLimit>
      <velocityZProportionalGain>5.0</velocityZProportionalGain>
      <velocityZIntegralGain>0.0</velocityZIntegralGain>
      <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
      <velocityZLimit>-1</velocityZLimit>
      <positionXYProportionalGain>1.1</positionXYProportionalGain>
      <positionXYDifferentialGain>0.0</positionXYDifferentialGain>
      <positionXYIntegralGain>0.0</positionXYIntegralGain>
      <positionXYLimit>5</positionXYLimit>
      <positionZProportionalGain>1.0</positionZProportionalGain>
      <positionZDifferentialGain>0.2</positionZDifferentialGain>
      <positionZIntegralGain>0.0</positionZIntegralGain>
      <positionZLimit>-1</positionZLimit>
      <maxForce>30</maxForce>
      <motionSmallNoise>0.0</motionSmallNoise>
      <motionDriftNoise>0.0</motionDriftNoise>
      <motionDriftNoiseTime>0.0</motionDriftNoiseTime>   <!-- this means add noise every two seconds -->
    </plugin>
  </gazebo>

  <!-- Sensors -->
  <!-- IMU sensor in 100fps -->
  <gazebo reference="base_link">
    <sensor name='sensor_imu' type='imu'>
      <always_on>true</always_on>
      <!-- <visualize>true</visualize> -->
      <update_rate>30</update_rate>
      <pose> 0 0 0 0 0 0 </pose>
      <plugin name='imu' filename='libgazebo_ros_imu_sensor.so'>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>

    </sensor>
  </gazebo>


  <!-- Sonar sensor in 100fps -->
  <gazebo reference="sonar_link">
    <sensor name="sonar" type="ray">
      <always_on>true</always_on>
      <!-- <visualize>true</visualize> -->
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.000000</resolution>
            <min_angle>-0.12</min_angle>
            <max_angle>0.12</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1.000000</resolution>
            <min_angle>-0.12</min_angle>
            <max_angle>0.12</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.02</min>
          <max>10</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sonar" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=sonar</remapping>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>sonar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="front_cam_link">
    <sensor name="front_camera" type="camera">
    
      <camera>
        <horizontal_fov>1.396263</horizontal_fov>
        <image>
          <width>960</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>50</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.005</stddev>
        </noise>
        <lens>
          <intrinsics>
            <fx>904.91767127</fx>
            <fy>904.09119851</fy>
            <cx>503.21829022</cx>
            <cy>355.3507261</cy>
            <s>1</s>
          </intrinsics>
        </lens>
      </camera>

      <always_on>true</always_on>
      <update_rate>0.0</update_rate> <!--It is equal to 45 fps || Yeah for now just stick to 30 :'), its lagging Laptop Kentang sih-->
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <plugin name="camera_front" filename="libgazebo_ros_camera.so">
        <ros>
          <remapping>image_raw:=camera_front</remapping>
          <remapping>camera_info:=camera_front_info</remapping>
        </ros>
        <camera_name>front</camera_name>
        <frame_name>camera_link_optical</frame_name>
        <Cx>503.21829022</Cx>
        <Cy>355.3507261</Cy>
        <focalLength>904</focalLength>
        <hack_baseline>0.07</hack_baseline>
        <distortionK1>-0.04265602</distortionK1>
        <distortionK2>0.10871022</distortionK2>
        <distortionK3>0.00116397</distortionK3>
        <distortionT1>0.00197183</distortionT1>
        <distortionT2>-0.0918521</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <!-- downward looking camera -->
  <gazebo reference="bottom_cam_link">
    <sensor name="down_camera" type="camera">
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>360</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.005</stddev>
        </noise>
      </camera>
      <!-- <always_on>true</always_on> -->
      <update_rate>15</update_rate>
      <!-- <visualize>true</visualize> -->
      <plugin name="camera_bottom" filename="libgazebo_ros_camera.so">
        <ros>
          <remapping>image_raw:=camera_bottom</remapping>
          <remapping>camera_info:=camera_bottom_info</remapping>
        </ros>
        <camera_name>bottom</camera_name>
        <frame_name>bottom_cam_link</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>


  <gazebo reference="base_link">
    <sensor name="gps" type="gps">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin name="gps" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <namespace>/gps</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>
</robot>
